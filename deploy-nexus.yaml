---
- name: Install Java and net-tools
  hosts: nexus_server
  become: true
  tasks:
    - name: Update apt repo and cache
      apt: update_cache=true force_apt_get=true cache_valid_time=3600
    - name: Install Java 8
      apt: name=openjdk-8-jre-headless
    - name: Install net-tools
      apt: name=net-tools
    - name: install acl
      apt: name=acl
      # in latest ubuntu acl doesn't present so I installed in manually it's not mentioned in the tutorial

- name: Download and unpack nexus installer
  hosts: nexus_server
  become: true
  tasks:
    - name: check if nexus folder already exists
      stat:
        path: /opt/nexus
      register: stat_result
    # - debug: msg={{stat_result.stat.exists}}     --to check where the exists present inside stat_result
    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/
      register: download_result
    #- debug: msg={{download_result}}   ---we just used it read the down_res file to find key of file's location
    - name: Untar nexus installer
      unarchive:
        src: "{{download_result.dest}}"
        dest: /opt/
        remote_src: true
      when: not stat_result.stat.exists    #task will perform only if the file does not exist
    - name: Find nexus folder to rename it
      find: 
        paths: /opt
        pattern: "nexus-*"
        file_type: directory
      register: find_result
    # - debug: msg={{find_results}}            --debugged it read the result of find_result output to find the folder
    # we moved the checking folder from here to line line 17
    - name: Rename nexus folder
      shell: mv {{find_result.files[0].path}} /opt/nexus     #unlike above commands shell commands will execute every time to skip that v r using above conditionals
      when: not stat_result.stat.exists    #task will perform only if the file does not exist

- name: Create nexus user
  hosts: nexus_server
  become: true
  tasks:
    - name: ensure group nexus exists
      group:
        name: nexus
        state: present
    - name: Create nexus user
      user:
        name: nexus
        group: nexus
    - name: Make nexus user owner of nexus folder
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
    - name: Make nexus user owner of sonatype-work folder
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
    
- name: Start nexus with nexus user
  hosts: nexus_server
  become: true
  become_user: nexus
  tasks:
    - name: set run_as_user nexus
      lineinfile:
        path: /opt/nexus/bin/nexus.rc
        regexp: '^#run_as_user=""'
        line: run_as_user="nexus"
#above | is used to show there are list of commands in each line
    - name: Start nexus
      command: /opt/nexus/bin/nexus start

- name: Verify nexus running
  hosts: nexus_server
  become: true
  become_user: nexus
  tasks:
    - name: Check with ps
      shell: ps aux | grep nexus         # result of this command will stored as a variable we call in register, can name anything we want
      register: app_status
    - debug: msg={{app_status.stdout_lines}}
    - name: Wait one minute
      pause:
        minutes: 1
    - name: Check with netstat
      shell: netstat -plnt
      register: app_status
    - debug: msg={{app_status.stdout_lines}}

