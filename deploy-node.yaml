---
- name: Install node and npm
  hosts: 3.101.15.17
  become: true
  tasks:
    - name: Update apt repo and cache
      apt: update_cache=true force_apt_get=true cache_valid_time=3600
    - name: Install nodejs and npm
      apt:
        pkg:
          - nodejs
          - npm
          - acl
      # in latest ubuntu acl doesn't present so I installed in manually it's not mentioned in the tutorial

- name: Create new linux user for node app
  hosts: 3.101.15.17
  become: true
  vars_files:
    - vars
  tasks:
    - name: Create linux user
      user:
        name: "{{linux_name}}"
        comment: admin user
        group: admin
      register: user_creation_result
    - debug: msg={{user_creation_result}}

- name: Deploy nodejs app
  hosts: 3.101.15.17
  become: true
  become_user: "{{linux_name}}"              # we are now going to perform the below tasks as a linux user not as a root so removing it
  vars_files:
    - vars
  tasks:
    # - name: Copy nodejs folder to a server       unarchive has an ability to take source from local and unpack on the destination directly, so we don't need to copy
    #   become: true
    #   copy:
    #     src: /Users/hussain.sheriff/src/db/my-app/developing-with-docker-1.0.0.tgz
    #     dest: /root/app-1.0.0.tgz
    - name: Unpack the nodejs file
      # become: true               # this is like using the sudo command or to become a root user
      unarchive:
        src: "{{location}}/developing-with-docker-{{version}}.tgz" #/root/app-1.0.0.tgz    ---old server location
        dest: "{{user_home_dir}}"        # /root/       --for the root user
        # remote_src: true         --since we are doing in from the local we don't need this, inside server we need this

    - name: Install dependencies
      community.general.npm:
        path: "{{user_home_dir}}/package"
    - name: Start the application
      command:
        chdir: "{{user_home_dir}}/package/app"
        cmd: node server               # this will not exit so we need to run it in the bg, to do that do below
      async: 1000
      poll: 0
    - name: Ensure app is running
      shell: ps aux | grep node         # result of this command will stored as a variable we call in register, can name anything we want
      register: app_status
    - debug: msg={{app_status.stdout_lines}}